#pragma once

#ifdef STAND_DEBUG
#include <string>

#include <fmt/format.h>
#endif

#define AUTOID_MSG(name) static constexpr unsigned int id = name;

namespace rage
{
	enum netMessageId : unsigned int
	{
		CMSG_TEXT_CHAT_STATUS = 0,
		REASSIGN_NEGOTIATE_MSG = 1,
		MSG_TRANSITION_TO_GAME_NOTIFY = 2,
		CMSG_VOICE_STATUS = 3,
		MSG_RESERVE_SLOTS_ACK = 4,
		RL_MSG_SEARCH_REQUEST = 5,
		MSG_TRANSITION_TO_ACTIVITY_START = 6,
		MSG_SESSION_ESTABLISHED = 7,
		CMSG_JOIN_RESPONSE = 8, // never actually sent as it's only bundled within snMsgJoinResponse
		INFORM_OBJECT_IDS_MSG = 9,
		MSG_TEXT_MESSAGE = 10, // sms
		MSG_SCRIPT_VERIFY_HOST_ACK = 11,
		MSG_BLACKLIST = 12,
		MSG_REQUEST_KICK_FROM_HOST = 13,
		MSG_SCRIPT_NEW_HOST = 14,
		NET_KEY_EXCHANGE_SESSION_OFFER = 15,
		REASSIGN_RESPONSE_MSG = 16,
		NET_ICE_SESSION_PONG = 17,
		SN_MSG_MIGRATE_HOST_RESPONSE = 18,
		RL_SESSION_DETAIL_RESPONSE = 19,
		MSG_TRANSITION_GAMER_INSTRUCTION = 20,
		NET_ICE_SESSION_PING = 21,
		NON_PHYSICAL_DATA_MSG = 22,
		MSG_SCRIPT_LEAVE = 23,
		PLAYER_DATA_MSG = 24,
		MSG_TRANSITION_LAUNCH = 25,
		MSG_SCRIPT_MIGRATE_HOST_FAIL_ACK = 26,
		MSG_TRANSITION_LAUNCH_NOTIFY = 27,
		MSG_SCRIPT_BOT_JOIN = 28,
		RL_MSG_QOS_PROBE_REQUEST = 29,
		MSG_PARTY_ENTER_GAME = 30,
		SN_MSG_SET_INVITABLE_CMD = 31,
		CMSG_PACKED_EVENT_RELIABLES_MSGS = 32,
		NET_MESSAGE = 33,
		RL_SESSION_DETAIL_REQUEST = 34,
		SN_MSG_SESSION_MEMBER_IDS = 35,
		CMSG_TEXT_MESSAGE = 36, // text message
		MSG_SPLIT_UPDATE_ACK = 37,
		REASSIGN_CONFIRM_MSG = 38,
		NET_LAG_PING_MSG = 39,
		NET_ICE_SESSION_DEBUG_INFO = 40,
		REQUEST_OBJECT_IDS_MSG = 41,
		SN_MSG_JOIN_RESPONSE = 42,
		MSG_SCRIPT_BOT_LEAVE = 43,
		RL_MSG_QOS_PROBE_RESPONSE = 44,
		SN_MSG_START_MATCH_CMD = 45,
		CROAMING_REQUEST_BUBBLE_MSG = 46,
		MSG_CXN_REQUEST_REMOTE_TIMEOUT = 47,
		PACKED_RELIABLES_MSG = 48,
		MSG_SCRIPT_BOT_HANDSHAKE_ACK = 49,
		CROAMING_INITIAL_BUBBLE_MSG = 50,
		MSG_SCRIPT_MIGRATE_HOST = 51,
		MSG_KICK_PLAYER = 52, // correct 2944
		SN_MSG_NOT_MIGRATING = 53,
		MSG_TRANSITION_TO_ACTIVITY_FINISH = 54,
		MSG_TRANSITION_PARAMETER_STRING = 55,
		NET_TIME_SYNC_MSG = 56,
		MSG_RESERVE_SLOTS = 57,
		MSG_PLAYER_CARD_SYNC = 58,
		PACKED_CLONE_SYNC_ACKS_MSG = 59,
		MSG_TRANSITION_PARAMETERS = 60,
		MSG_PARTY_LEAVE_GAME = 61,
		MSG_SCRIPT_VERIFY_HOST = 62,
		CROAMING_JOIN_BUBBLE_ACK_MSG = 63,
		MSG_SCRIPT_LEAVE_ACK = 64,
		SN_MSG_JOIN_REQUEST = 65,
		MSG_REQUEST_TRANSITION_PARAMETERS = 66,
		MSG_SCRIPT_JOIN_ACK = 67,
		NET_KEY_EXCHANGE_SESSION_ANSWER = 68,
		NET_ICE_SESSION_PORT_OPENER = 69,
		MSG_RADIO_STATION_SYNC = 70,
		MSG_RADIO_STATION_SYNC_REQUEST = 71,
		SN_MSG_CONFIG_REQUEST = 72,
		MSG_CXN_RELAY_ADDR_CHANGED = 73,
		NET_ICE_SESSION_ANSWER_OLD = 74, // unversioned struct - no longer used
		MSG_SCRIPT_BOT_HANDSHAKE = 75,
		CROAMING_JOIN_BUBBLE_MSG = 76,
		MSG_SCRIPT_JOIN_HOST_ACK = 77,
		CLONE_SYNC_MSG = 78,
		CMSG_PACKED_EVENTS = 79,
		MSG_TRANSITION_TO_GAME_START = 80,
		MSG_CHECK_QUEUED_JOIN_REQUEST = 81,
		MSG_SESSION_ESTABLISHED_REQUEST = 82,
		SN_MSG_REMOVE_GAMERS_FROM_SESSION_CMD = 83, // correct 2944
		SN_MSG_REQUEST_GAMER_INFO = 84,
		NET_COMPLAINT_MSG = 85,
		NET_ICE_SESSION_OFFER_OLD = 86,	// unversioned struct - no longer used
		MSG_SCRIPT_HANDSHAKE = 87,
		SN_MSG_HOST_LEFT_WHILST_JOINING_CMD = 88,
		MSG_CHECK_QUEUED_JOIN_REQUEST_REPLY = 89,
		SN_MSG_CHANGE_SESSION_ATTRIBUTES_CMD = 90,
		MSG_SCRIPT_HANDSHAKE_ACK = 91,
		MSG_SCRIPT_JOIN = 92,
		MSG_UPDATE_ACK = 93,
		MSG_CHECK_QUEUED_JOIN_REQUEST_INVITE_REPLY = 94,
		SN_MSG_CONFIG_RESPONSE = 95,
		MSG_UPDATE = 96,
		CMSG_PLAYER_IS_TYPING = 97,
		SN_MSG_SESSION_ACCEPT_CHAT = 98,
		MSG_SCRIPT_BOT_JOIN_ACK = 99,
		SN_MSG_ADD_GAMER_TO_SESSION_CMD = 100,
		ACTIVATE_NETWORK_BOT_MSG = 101,
		SN_MSG_MIGRATE_HOST_REQUEST = 102,
		MSG_SCRIPT_HOST_REQUEST = 103,
		CMSG_JOIN_REQUEST = 104, // never actually sent as it's only bundled within snMsgJoinRequest
		SN_MSG_BASE = 105,
		MSG_PLAYER_CARD_REQUEST = 106,
		RL_MSG_SEARCH_RESPONSE = 107,
		MSG_DEBUG_TIME_SCALE = 108,
		MSG_DEBUG_TIME_PAUSE = 109,
		MSG_DEBUG_NO_TIMEOUTS = 110,
		MSG_DEBUG_ADD_FAIL_MARK = 111,
		MSG_SYNC_DR_DISPLAY = 112,
		SN_MSG_SESSION_INFO = 113,
		SN_MSG_SESSION_INFO_RESPONSE = 114,
		SN_MSG_SESSION_JOIN_REQUEST = 115,
		SN_MSG_SESSION_JOIN_REQUEST_RESPONSE = 116,
		CMSG_VOICE_CHAT_REQUEST = 117,
		CMSG_VOICE_CHAT_REPLY = 118,
		CMSG_VOICE_CHAT_END = 119,
		VOICE_CHAT_USER_MSG = 120,
		SESSION_INFO_MSG = 121,
		REGISTER_COMPLETE_MSG = 122,
		START_COMMAND_MSG = 123,
		QA_NR_FOO_MSG = 124,
		QA_NR_BAR_MSG = 125,
		MSG_DEBUG_STALL = 126,
		NET_ICE_SESSION_OFFER = 127,
		NET_ICE_SESSION_ANSWER = 128,
		MSG_LOST_HOST_CONNECTION = 129,
		CROAMING_BUBBLE_REQUIRED_CHECK_MSG = 130,
		CROAMING_BUBBLE_REQUIRED_RESPONSE_MSG = 131,
		NET_ROUTE_REQUEST_MSG = 132,
		NET_ROUTE_REPLY_MSG = 133,
		NET_ROUTE_ERR_MSG = 134,
		NET_ROUTE_CHANGE_REQUEST_MSG = 135,
		NET_ROUTE_CHANGE_REPLY_MSG = 136,
		NET_ICE_SESSION_RELAY_ROUTE_CHECK = 137,

		MSG_ID_NUM_MESSAGE_IDS
	};

#ifdef STAND_DEBUG
	[[nodiscard]] inline const char* netMessage_getNameRaw(unsigned int id)
	{
		switch (id)
		{
		case CMSG_TEXT_CHAT_STATUS: return "CMSG_TEXT_CHAT_STATUS";
		case REASSIGN_NEGOTIATE_MSG: return "REASSIGN_NEGOTIATE_MSG";
		case MSG_TRANSITION_TO_GAME_NOTIFY: return "MSG_TRANSITION_TO_GAME_NOTIFY";
		case CMSG_VOICE_STATUS: return "CMSG_VOICE_STATUS";
		case MSG_RESERVE_SLOTS_ACK: return "MSG_RESERVE_SLOTS_ACK";
		case RL_MSG_SEARCH_REQUEST: return "RL_MSG_SEARCH_REQUEST";
		case MSG_TRANSITION_TO_ACTIVITY_START: return "MSG_TRANSITION_TO_ACTIVITY_START";
		case MSG_SESSION_ESTABLISHED: return "MSG_SESSION_ESTABLISHED";
		case CMSG_JOIN_RESPONSE: return "CMSG_JOIN_RESPONSE";
		case INFORM_OBJECT_IDS_MSG: return "INFORM_OBJECT_IDS_MSG";
		case MSG_TEXT_MESSAGE: return "MSG_TEXT_MESSAGE";
		case MSG_SCRIPT_VERIFY_HOST_ACK: return "MSG_SCRIPT_VERIFY_HOST_ACK";
		case MSG_BLACKLIST: return "MSG_BLACKLIST";
		case MSG_REQUEST_KICK_FROM_HOST: return "MSG_REQUEST_KICK_FROM_HOST";
		case MSG_SCRIPT_NEW_HOST: return "MSG_SCRIPT_NEW_HOST";
		case NET_KEY_EXCHANGE_SESSION_OFFER: return "NET_KEY_EXCHANGE_SESSION_OFFER";
		case REASSIGN_RESPONSE_MSG: return "REASSIGN_RESPONSE_MSG";
		case NET_ICE_SESSION_PONG: return "NET_ICE_SESSION_PONG";
		case SN_MSG_MIGRATE_HOST_RESPONSE: return "SN_MSG_MIGRATE_HOST_RESPONSE";
		case RL_SESSION_DETAIL_RESPONSE: return "RL_SESSION_DETAIL_RESPONSE";
		case MSG_TRANSITION_GAMER_INSTRUCTION: return "MSG_TRANSITION_GAMER_INSTRUCTION";
		case NET_ICE_SESSION_PING: return "NET_ICE_SESSION_PING";
		case NON_PHYSICAL_DATA_MSG: return "NON_PHYSICAL_DATA_MSG";
		case MSG_SCRIPT_LEAVE: return "MSG_SCRIPT_LEAVE";
		case PLAYER_DATA_MSG: return "PLAYER_DATA_MSG";
		case MSG_TRANSITION_LAUNCH: return "MSG_TRANSITION_LAUNCH";
		case MSG_SCRIPT_MIGRATE_HOST_FAIL_ACK: return "MSG_SCRIPT_MIGRATE_HOST_FAIL_ACK";
		case MSG_TRANSITION_LAUNCH_NOTIFY: return "MSG_TRANSITION_LAUNCH_NOTIFY";
		case MSG_SCRIPT_BOT_JOIN: return "MSG_SCRIPT_BOT_JOIN";
		case RL_MSG_QOS_PROBE_REQUEST: return "RL_MSG_QOS_PROBE_REQUEST";
		case MSG_PARTY_ENTER_GAME: return "MSG_PARTY_ENTER_GAME";
		case SN_MSG_SET_INVITABLE_CMD: return "SN_MSG_SET_INVITABLE_CMD";
		case CMSG_PACKED_EVENT_RELIABLES_MSGS: return "CMSG_PACKED_EVENT_RELIABLES_MSGS";
		case NET_MESSAGE: return "NET_MESSAGE";
		case RL_SESSION_DETAIL_REQUEST: return "RL_SESSION_DETAIL_REQUEST";
		case SN_MSG_SESSION_MEMBER_IDS: return "SN_MSG_SESSION_MEMBER_IDS";
		case CMSG_TEXT_MESSAGE: return "CMSG_TEXT_MESSAGE";
		case MSG_SPLIT_UPDATE_ACK: return "MSG_SPLIT_UPDATE_ACK";
		case REASSIGN_CONFIRM_MSG: return "REASSIGN_CONFIRM_MSG";
		case NET_LAG_PING_MSG: return "NET_LAG_PING_MSG";
		case NET_ICE_SESSION_DEBUG_INFO: return "NET_ICE_SESSION_DEBUG_INFO";
		case REQUEST_OBJECT_IDS_MSG: return "REQUEST_OBJECT_IDS_MSG";
		case SN_MSG_JOIN_RESPONSE: return "SN_MSG_JOIN_RESPONSE";
		case MSG_SCRIPT_BOT_LEAVE: return "MSG_SCRIPT_BOT_LEAVE";
		case RL_MSG_QOS_PROBE_RESPONSE: return "RL_MSG_QOS_PROBE_RESPONSE";
		case SN_MSG_START_MATCH_CMD: return "SN_MSG_START_MATCH_CMD";
		case CROAMING_REQUEST_BUBBLE_MSG: return "CROAMING_REQUEST_BUBBLE_MSG";
		case MSG_CXN_REQUEST_REMOTE_TIMEOUT: return "MSG_CXN_REQUEST_REMOTE_TIMEOUT";
		case PACKED_RELIABLES_MSG: return "PACKED_RELIABLES_MSG";
		case MSG_SCRIPT_BOT_HANDSHAKE_ACK: return "MSG_SCRIPT_BOT_HANDSHAKE_ACK";
		case CROAMING_INITIAL_BUBBLE_MSG: return "CROAMING_INITIAL_BUBBLE_MSG";
		case MSG_SCRIPT_MIGRATE_HOST: return "MSG_SCRIPT_MIGRATE_HOST";
		case MSG_KICK_PLAYER: return "MSG_KICK_PLAYER";
		case SN_MSG_NOT_MIGRATING: return "SN_MSG_NOT_MIGRATING";
		case MSG_TRANSITION_TO_ACTIVITY_FINISH: return "MSG_TRANSITION_TO_ACTIVITY_FINISH";
		case MSG_TRANSITION_PARAMETER_STRING: return "MSG_TRANSITION_PARAMETER_STRING";
		case NET_TIME_SYNC_MSG: return "NET_TIME_SYNC_MSG";
		case MSG_RESERVE_SLOTS: return "MSG_RESERVE_SLOTS";
		case MSG_PLAYER_CARD_SYNC: return "MSG_PLAYER_CARD_SYNC";
		case PACKED_CLONE_SYNC_ACKS_MSG: return "PACKED_CLONE_SYNC_ACKS_MSG";
		case MSG_TRANSITION_PARAMETERS: return "MSG_TRANSITION_PARAMETERS";
		case MSG_PARTY_LEAVE_GAME: return "MSG_PARTY_LEAVE_GAME";
		case MSG_SCRIPT_VERIFY_HOST: return "MSG_SCRIPT_VERIFY_HOST";
		case CROAMING_JOIN_BUBBLE_ACK_MSG: return "CROAMING_JOIN_BUBBLE_ACK_MSG";
		case MSG_SCRIPT_LEAVE_ACK: return "MSG_SCRIPT_LEAVE_ACK";
		case SN_MSG_JOIN_REQUEST: return "SN_MSG_JOIN_REQUEST";
		case MSG_REQUEST_TRANSITION_PARAMETERS: return "MSG_REQUEST_TRANSITION_PARAMETERS";
		case MSG_SCRIPT_JOIN_ACK: return "MSG_SCRIPT_JOIN_ACK";
		case NET_KEY_EXCHANGE_SESSION_ANSWER: return "NET_KEY_EXCHANGE_SESSION_ANSWER";
		case NET_ICE_SESSION_PORT_OPENER: return "NET_ICE_SESSION_PORT_OPENER";
		case MSG_RADIO_STATION_SYNC: return "MSG_RADIO_STATION_SYNC";
		case MSG_RADIO_STATION_SYNC_REQUEST: return "MSG_RADIO_STATION_SYNC_REQUEST";
		case SN_MSG_CONFIG_REQUEST: return "SN_MSG_CONFIG_REQUEST";
		case MSG_CXN_RELAY_ADDR_CHANGED: return "MSG_CXN_RELAY_ADDR_CHANGED";
		case NET_ICE_SESSION_ANSWER_OLD: return "NET_ICE_SESSION_ANSWER_OLD";
		case MSG_SCRIPT_BOT_HANDSHAKE: return "MSG_SCRIPT_BOT_HANDSHAKE";
		case CROAMING_JOIN_BUBBLE_MSG: return "CROAMING_JOIN_BUBBLE_MSG";
		case MSG_SCRIPT_JOIN_HOST_ACK: return "MSG_SCRIPT_JOIN_HOST_ACK";
		case CLONE_SYNC_MSG: return "CLONE_SYNC_MSG";
		case CMSG_PACKED_EVENTS: return "CMSG_PACKED_EVENTS";
		case MSG_TRANSITION_TO_GAME_START: return "MSG_TRANSITION_TO_GAME_START";
		case MSG_CHECK_QUEUED_JOIN_REQUEST: return "MSG_CHECK_QUEUED_JOIN_REQUEST";
		case MSG_SESSION_ESTABLISHED_REQUEST: return "MSG_SESSION_ESTABLISHED_REQUEST";
		case SN_MSG_REMOVE_GAMERS_FROM_SESSION_CMD: return "SN_MSG_REMOVE_GAMERS_FROM_SESSION_CMD";
		case SN_MSG_REQUEST_GAMER_INFO: return "SN_MSG_REQUEST_GAMER_INFO";
		case NET_COMPLAINT_MSG: return "NET_COMPLAINT_MSG";
		case NET_ICE_SESSION_OFFER_OLD: return "NET_ICE_SESSION_OFFER_OLD";
		case MSG_SCRIPT_HANDSHAKE: return "MSG_SCRIPT_HANDSHAKE";
		case SN_MSG_HOST_LEFT_WHILST_JOINING_CMD: return "SN_MSG_HOST_LEFT_WHILST_JOINING_CMD";
		case MSG_CHECK_QUEUED_JOIN_REQUEST_REPLY: return "MSG_CHECK_QUEUED_JOIN_REQUEST_REPLY";
		case SN_MSG_CHANGE_SESSION_ATTRIBUTES_CMD: return "SN_MSG_CHANGE_SESSION_ATTRIBUTES_CMD";
		case MSG_SCRIPT_HANDSHAKE_ACK: return "MSG_SCRIPT_HANDSHAKE_ACK";
		case MSG_SCRIPT_JOIN: return "MSG_SCRIPT_JOIN";
		case MSG_UPDATE_ACK: return "MSG_UPDATE_ACK";
		case MSG_CHECK_QUEUED_JOIN_REQUEST_INVITE_REPLY: return "MSG_CHECK_QUEUED_JOIN_REQUEST_INVITE_REPLY";
		case SN_MSG_CONFIG_RESPONSE: return "SN_MSG_CONFIG_RESPONSE";
		case MSG_UPDATE: return "MSG_UPDATE";
		case CMSG_PLAYER_IS_TYPING: return "CMSG_PLAYER_IS_TYPING";
		case SN_MSG_SESSION_ACCEPT_CHAT: return "SN_MSG_SESSION_ACCEPT_CHAT";
		case MSG_SCRIPT_BOT_JOIN_ACK: return "MSG_SCRIPT_BOT_JOIN_ACK";
		case SN_MSG_ADD_GAMER_TO_SESSION_CMD: return "SN_MSG_ADD_GAMER_TO_SESSION_CMD";
		case ACTIVATE_NETWORK_BOT_MSG: return "ACTIVATE_NETWORK_BOT_MSG";
		case SN_MSG_MIGRATE_HOST_REQUEST: return "SN_MSG_MIGRATE_HOST_REQUEST";
		case MSG_SCRIPT_HOST_REQUEST: return "MSG_SCRIPT_HOST_REQUEST";
		case CMSG_JOIN_REQUEST: return "CMSG_JOIN_REQUEST";
		case SN_MSG_BASE: return "SN_MSG_BASE";
		case MSG_PLAYER_CARD_REQUEST: return "MSG_PLAYER_CARD_REQUEST";
		case RL_MSG_SEARCH_RESPONSE: return "RL_MSG_SEARCH_RESPONSE";
		case MSG_DEBUG_TIME_SCALE: return "MSG_DEBUG_TIME_SCALE";
		case MSG_DEBUG_TIME_PAUSE: return "MSG_DEBUG_TIME_PAUSE";
		case MSG_DEBUG_NO_TIMEOUTS: return "MSG_DEBUG_NO_TIMEOUTS";
		case MSG_DEBUG_ADD_FAIL_MARK: return "MSG_DEBUG_ADD_FAIL_MARK";
		case MSG_SYNC_DR_DISPLAY: return "MSG_SYNC_DR_DISPLAY";
		case SN_MSG_SESSION_INFO: return "SN_MSG_SESSION_INFO";
		case SN_MSG_SESSION_INFO_RESPONSE: return "SN_MSG_SESSION_INFO_RESPONSE";
		case SN_MSG_SESSION_JOIN_REQUEST: return "SN_MSG_SESSION_JOIN_REQUEST";
		case SN_MSG_SESSION_JOIN_REQUEST_RESPONSE: return "SN_MSG_SESSION_JOIN_REQUEST_RESPONSE";
		case CMSG_VOICE_CHAT_REQUEST: return "CMSG_VOICE_CHAT_REQUEST";
		case CMSG_VOICE_CHAT_REPLY: return "CMSG_VOICE_CHAT_REPLY";
		case CMSG_VOICE_CHAT_END: return "CMSG_VOICE_CHAT_END";
		case VOICE_CHAT_USER_MSG: return "VOICE_CHAT_USER_MSG";
		case SESSION_INFO_MSG: return "SESSION_INFO_MSG";
		case REGISTER_COMPLETE_MSG: return "REGISTER_COMPLETE_MSG";
		case START_COMMAND_MSG: return "START_COMMAND_MSG";
		case QA_NR_FOO_MSG: return "QA_NR_FOO_MSG";
		case QA_NR_BAR_MSG: return "QA_NR_BAR_MSG";
		case MSG_DEBUG_STALL: return "MSG_DEBUG_STALL";
		case NET_ICE_SESSION_OFFER: return "NET_ICE_SESSION_OFFER";
		case NET_ICE_SESSION_ANSWER: return "NET_ICE_SESSION_ANSWER";
		case MSG_LOST_HOST_CONNECTION: return "MSG_LOST_HOST_CONNECTION";
		case CROAMING_BUBBLE_REQUIRED_CHECK_MSG: return "CROAMING_BUBBLE_REQUIRED_CHECK_MSG";
		case CROAMING_BUBBLE_REQUIRED_RESPONSE_MSG: return "CROAMING_BUBBLE_REQUIRED_RESPONSE_MSG";
		case NET_ROUTE_REQUEST_MSG: return "NET_ROUTE_REQUEST_MSG";
		case NET_ROUTE_REPLY_MSG: return "NET_ROUTE_REPLY_MSG";
		case NET_ROUTE_ERR_MSG: return "NET_ROUTE_ERR_MSG";
		case NET_ROUTE_CHANGE_REQUEST_MSG: return "NET_ROUTE_CHANGE_REQUEST_MSG";
		case NET_ROUTE_CHANGE_REPLY_MSG: return "NET_ROUTE_CHANGE_REPLY_MSG";
		case NET_ICE_SESSION_RELAY_ROUTE_CHECK: return "NET_ICE_SESSION_RELAY_ROUTE_CHECK";
		}
		return nullptr;
	}

	[[nodiscard]] inline std::string netMessage_getName(unsigned int id)
	{
		if (auto name = netMessage_getNameRaw(id))
		{
			return name;
		}
		return fmt::to_string((int)id);
	}
#endif
}

using enum rage::netMessageId;
