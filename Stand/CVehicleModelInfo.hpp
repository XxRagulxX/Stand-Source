#pragma once

#include "CBaseModelInfo.hpp"

#include <soup/BigBitset.hpp>

#include "VehicleType.hpp"

#pragma pack(push, 1)
class CVehicleModelInfo : public CBaseModelInfo
{
private:
	static constexpr uint8_t NUM_VEH_BASE_COLOURS = 6;
	static constexpr uint8_t MAX_VEH_POSSIBLE_COLOURS = 25;

public:
	enum Flags
	{
		FLAG_SMALL_WORKER = 0,
		FLAG_BIG = 1,
		FLAG_NO_BOOT = 2,
		FLAG_ONLY_DURING_OFFICE_HOURS = 3,
		FLAG_BOOT_IN_FRONT = 4,
		FLAG_IS_VAN = 5,
		FLAG_AVOID_TURNS = 6,
		FLAG_HAS_LIVERY = 7,
		FLAG_LIVERY_MATCH_EXTRA = 8,
		FLAG_SPORTS = 9,
		FLAG_DELIVERY = 10,
		_0xB5A93F62 = 11,
		FLAG_ONLY_ON_HIGHWAYS = 12,
		FLAG_TALL_SHIP = 13,
		FLAG_SPAWN_ON_TRAILER = 14,
		FLAG_SPAWN_BOAT_ON_TRAILER = 15,
		FLAG_EXTRAS_GANG = 16,
		FLAG_EXTRAS_CONVERTIBLE = 17,
		FLAG_EXTRAS_TAXI = 18,
		FLAG_EXTRAS_RARE = 19,
		FLAG_EXTRAS_REQUIRE = 20,
		FLAG_EXTRAS_STRONG = 21,
		FLAG_EXTRAS_ONLY_BREAK_WHEN_DESTROYED = 22,
		FLAG_EXTRAS_SCRIPT = 23,
		FLAG_EXTRAS_ALL = 24,
		FLAG_EXTRAS_MATCH_LIVERY = 25,
		FLAG_DONT_ROTATE_TAIL_ROTOR = 26,
		FLAG_PARKING_SENSORS = 27,
		FLAG_PEDS_CAN_STAND_ON_TOP = 28,
		_0x77C9F804 = 29,
		FLAG_GEN_NAVMESH = 30,
		FLAG_LAW_ENFORCEMENT = 31,
		FLAG_EMERGENCY_SERVICE = 32,
		FLAG_DRIVER_NO_DRIVE_BY = 33,
		FLAG_NO_RESPRAY = 34,
		FLAG_IGNORE_ON_SIDE_CHECK = 35,
		FLAG_RICH_CAR = 36,
		FLAG_AVERAGE_CAR = 37,
		FLAG_POOR_CAR = 38,
		FLAG_ALLOWS_RAPPEL = 39,
		FLAG_DONT_CLOSE_DOOR_UPON_EXIT = 40,
		FLAG_USE_HIGHER_DOOR_TORQUE = 41,
		FLAG_DISABLE_THROUGH_WINDSCREEN = 42,
		FLAG_IS_ELECTRIC = 43,
		FLAG_NO_BROKEN_DOWN_SCENARIO = 44,
		FLAG_IS_JETSKI = 45,
		FLAG_DAMPEN_STICKBOMB_DAMAGE = 46,
		FLAG_DONT_SPAWN_IN_CARGEN = 47,
		FLAG_IS_OFFROAD_VEHICLE = 48,
		FLAG_INCREASE_PED_COMMENTS = 49,
		FLAG_EXPLODE_ON_CONTACT = 50,
		FLAG_USE_FAT_INTERIOR_LIGHT = 51,
		FLAG_HEADLIGHTS_USE_ACTUAL_BONE_POS = 52,
		FLAG_FAKE_EXTRALIGHTS = 53,
		FLAG_CANNOT_BE_MODDED = 54,
		FLAG_DONT_SPAWN_AS_AMBIENT = 55,
		FLAG_IS_BULKY = 56,
		FLAG_BLOCK_FROM_ATTRACTOR_SCENARIO = 57,
		FLAG_IS_BUS = 58,
		FLAG_USE_STEERING_PARAM_FOR_LEAN = 59,
		FLAG_CANNOT_BE_DRIVEN_BY_PLAYER = 60,
		FLAG_SPRAY_PETROL_BEFORE_EXPLOSION = 61,
		FLAG_ATTACH_TRAILER_ON_HIGHWAY = 62,
		FLAG_ATTACH_TRAILER_IN_CITY = 63,
		FLAG_HAS_NO_ROOF = 64,
		FLAG_ALLOW_TARGETING_OF_OCCUPANTS = 65,
		FLAG_RECESSED_HEADLIGHT_CORONAS = 66,
		FLAG_RECESSED_TAILLIGHT_CORONAS = 67,
		FLAG_IS_TRACKED_FOR_TRAILS = 68,
		FLAG_HEADLIGHTS_ON_LANDINGGEAR = 69,
		FLAG_CONSIDERED_FOR_VEHICLE_ENTRY_WHEN_STOOD_ON = 70,
		FLAG_GIVE_SCUBA_GEAR_ON_EXIT = 71,
		FLAG_IS_DIGGER = 72,
		FLAG_IS_TANK = 73,
		FLAG_USE_COVERBOUND_INFO_FOR_COVERGEN = 74,
		FLAG_CAN_BE_DRIVEN_ON = 75,
		FLAG_HAS_BULLETPROOF_GLASS = 76,
		FLAG_CANNOT_TAKE_COVER_WHEN_STOOD_ON = 77,
		FLAG_INTERIOR_BLOCKED_BY_BOOT = 78,
		FLAG_DONT_TIMESLICE_WHEELS = 79,
		FLAG_FLEE_FROM_COMBAT = 80,
		FLAG_DRIVER_SHOULD_BE_FEMALE = 81,
		FLAG_DRIVER_SHOULD_BE_MALE = 82,
		FLAG_COUNT_AS_FACEBOOK_DRIVEN = 83,
		FLAG_BIKE_CLAMP_PICKUP_LEAN_RATE = 84,
		FLAG_PLANE_WEAR_ALTERNATIVE_HELMET = 85,
		FLAG_USE_STRICTER_EXIT_COLLISION_TESTS = 86,
		FLAG_TWO_DOORS_ONE_SEAT = 87,
		FLAG_USE_LIGHTING_INTERIOR_OVERRIDE = 88,
		FLAG_USE_RESTRICTED_DRIVEBY_HEIGHT = 89,
		FLAG_CAN_HONK_WHEN_FLEEING = 90,
		FLAG_PEDS_INSIDE_CAN_BE_SET_ON_FIRE_MP = 91,
		FLAG_REPORT_CRIME_IF_STANDING_ON = 92,
		FLAG_HELI_USES_FIXUPS_ON_OPEN_DOOR = 93,
		FLAG_FORCE_ENABLE_CHASSIS_COLLISION = 94,
		FLAG_CANNOT_BE_PICKUP_BY_CARGOBOB = 95,
		FLAG_CAN_HAVE_NEONS = 96,
		FLAG_HAS_INTERIOR_EXTRAS = 97,
		FLAG_HAS_TURRET_SEAT_ON_VEHICLE = 98,
		FLAG_ALLOW_OBJECT_LOW_LOD_COLLISION = 99,
		FLAG_DISABLE_AUTO_VAULT_ON_VEHICLE = 100,
		FLAG_USE_TURRET_RELATIVE_AIM_CALCULATION = 101,
		FLAG_USE_FULL_ANIMS_FOR_MP_WARP_ENTRY_POINTS = 102,
		FLAG_HAS_DIRECTIONAL_SHUFFLES = 103,
		FLAG_DISABLE_WEAPON_WHEEL_IN_FIRST_PERSON = 104,
		FLAG_USE_PILOT_HELMET = 105,
		FLAG_USE_WEAPON_WHEEL_WITHOUT_HELMET = 106,
		FLAG_PREFER_ENTER_TURRET_AFTER_DRIVER = 107,
		FLAG_USE_SMALLER_OPEN_DOOR_RATIO_TOLERANCE = 108,
		FLAG_USE_HEADING_ONLY_IN_TURRET_MATRIX = 109,
		FLAG_DONT_STOP_WHEN_GOING_TO_CLIMB_UP_POINT = 110,
		FLAG_HAS_REAR_MOUNTED_TURRET = 111,
		FLAG_DISABLE_BUSTING = 112,
		FLAG_IGNORE_RWINDOW_COLLISION = 113,
		FLAG_HAS_GULL_WING_DOORS = 114,
		FLAG_CARGOBOB_HOOK_UP_CHASSIS = 115,
		FLAG_USE_FIVE_ANIM_THROW_FP = 116,
		FLAG_ALLOW_HATS_NO_ROOF = 117,
		FLAG_HAS_REAR_SEAT_ACTIVITIES = 118,
		FLAG_HAS_LOWRIDER_HYDRAULICS = 119,
		FLAG_HAS_BULLET_RESISTANT_GLASS = 120,
		FLAG_HAS_INCREASED_RAMMING_FORCE = 121,
		FLAG_HAS_CAPPED_EXPLOSION_DAMAGE = 122,
		FLAG_HAS_LOWRIDER_DONK_HYDRAULICS = 123,
		FLAG_HELICOPTER_WITH_LANDING_GEAR = 124,
		FLAG_JUMPING_CAR = 125,
		FLAG_HAS_ROCKET_BOOST = 126,
		FLAG_RAMMING_SCOOP = 127,
		FLAG_HAS_PARACHUTE = 128,
		FLAG_RAMP = 129,
		FLAG_HAS_EXTRA_SHUFFLE_SEAT_ON_VEHICLE = 130,
		FLAG_FRONT_BOOT = 131,
		FLAG_HALF_TRACK = 132,
		FLAG_RESET_TURRET_SEAT_HEADING = 133,
		FLAG_TURRET_MODS_ON_ROOF = 134,
		FLAG_UPDATE_WEAPON_BATTERY_BONES = 135,
		FLAG_DONT_HOLD_LOW_GEARS_WHEN_ENGINE_UNDER_LOAD = 136,
		FLAG_HAS_GLIDER = 137,
		FLAG_INCREASE_LOW_SPEED_TORQUE = 138,
		FLAG_USE_AIRCRAFT_STYLE_WEAPON_TARGETING = 139,
		FLAG_KEEP_ALL_TURRETS_SYNCHRONISED = 140,
		FLAG_SET_WANTED_FOR_ATTACHED_VEH = 141,
		FLAG_TURRET_ENTRY_ATTACH_TO_DRIVER_SEAT = 142,
		FLAG_USE_STANDARD_FLIGHT_HELMET = 143,
		FLAG_SECOND_TURRET_MOD = 144,
		FLAG_THIRD_TURRET_MOD = 145,
		FLAG_HAS_EJECTOR_SEATS = 146,
		_0x2028D687 = 147,
		FLAG_HAS_JATO_BOOST_MOD = 148,
		FLAG_IGNORE_TRAPPED_HULL_CHECK = 149,
		FLAG_HOLD_TO_SHUFFLE = 150,
		FLAG_TURRET_MOD_WITH_NO_STOCK_TURRET = 151,
		FLAG_EQUIP_UNARMED_ON_ENTER = 152,
		FLAG_DISABLE_CAMERA_PUSH_BEYOND = 153,
		FLAG_HAS_VERTICAL_FLIGHT_MODE = 154,
		FLAG_HAS_OUTRIGGER_LEGS = 155,
		FLAG_CAN_NAVIGATE_TO_ON_VEHICLE_ENTRY = 156,
		FLAG_DROP_SUSPENSION_WHEN_STOPPED = 157,
		FLAG_DONT_CRASH_ABANDONED_NEAR_GROUND = 158,
		FLAG_USE_INTERIOR_RED_LIGHT = 159,
		FLAG_HAS_HELI_STRAFE_MODE = 160,
		FLAG_HAS_VERTICAL_ROCKET_BOOST = 161,
		FLAG_CREATE_WEAPON_MANAGER_ON_SPAWN = 162,
		FLAG_USE_ROOT_AS_BASE_LOCKON_POS = 163,
		FLAG_HEADLIGHTS_ON_TAP_ONLY = 164,
		FLAG_CHECK_WARP_TASK_FLAG_DURING_ENTER = 165,
		FLAG_USE_RESTRICTED_DRIVEBY_HEIGHT_HIGH = 166,
		FLAG_INCREASE_CAMBER_WITH_SUSPENSION_MOD = 167,
		FLAG_NO_HEAVY_BRAKE_ANIMATION = 168,
		FLAG_HAS_TWO_BONNET_BONES = 169,
		FLAG_DONT_LINK_BOOT2 = 170,
		FLAG_HAS_INCREASED_RAMMING_FORCE_WITH_CHASSIS_MOD = 171,
		_0x4C8630D9 = 172,
		FLAG_HAS_EXTENDED_COLLISION_MODS = 173,
		FLAG_HAS_NITROUS_MOD = 174,
		FLAG_HAS_JUMP_MOD = 175,
		FLAG_HAS_RAMMING_SCOOP_MOD = 176,
		FLAG_HAS_SUPER_BRAKES_MOD = 177,
		FLAG_CRUSHES_OTHER_VEHICLES = 178,
		FLAG_HAS_WEAPON_BLADE_MODS = 179,
		FLAG_HAS_WEAPON_SPIKE_MODS = 180,
		FLAG_FORCE_BONNET_CAMERA_INSTEAD_OF_POV = 181,
		FLAG_RAMP_MOD = 182,
		FLAG_HAS_TOMBSTONE = 183,
		FLAG_HAS_SIDE_SHUNT = 184,
		FLAG_HAS_FRONT_SPIKE_MOD = 185,
		FLAG_HAS_RAMMING_BAR_MOD = 186,
		FLAG_TURRET_MODS_ON_CHASSIS5 = 187,
		FLAG_HAS_SUPERCHARGER = 188,
		FLAG_IS_TANK_WITH_FLAME_DAMAGE = 189,
		FLAG_DISABLE_DEFORMATION = 190,
		FLAG_ALLOW_RAPPEL_AI_ONLY = 191,
		FLAG_USE_RESTRICTED_DRIVEBY_HEIGHT_MID_ONLY = 192,
		FLAG_FORCE_AUTO_VAULT_ON_VEHICLE_WHEN_STUCK = 193,
		FLAG_SPOILER_MOD_DOESNT_INCREASE_GRIP = 194,
		FLAG_NO_REVERSING_ANIMATION = 195,
		FLAG_IS_QUADBIKE_USING_BIKE_ANIMATIONS = 196,
		FLAG_IS_FORMULA_VEHICLE = 197,
		FLAG_LATCH_ALL_JOINTS = 198,
		FLAG_REJECT_ENTRY_TO_VEHICLE_WHEN_STOOD_ON = 199,
		FLAG_CHECK_IF_DRIVER_SEAT_IS_CLOSER_THAN_TURRETS_WITH_ON_BOARD_ENTER = 200,
		FLAG_RENDER_WHEELS_WITH_ZERO_COMPRESSION = 201,
		FLAG_USE_LENGTH_OF_VEHICLE_BOUNDS_FOR_PLAYER_LOCKON_POS = 202,
		FLAG_PREFER_FRONT_SEAT = 203,
	};

	/* 0x0B0 */ CVehicleModelInfoData* m_data; // May be nullptr if model is not needed
	PAD(0x0B0 + 8, 0x0F8) uint8_t m_possibleColours[NUM_VEH_BASE_COLOURS][MAX_VEH_POSSIBLE_COLOURS]; // size = 150
	PAD(0x0F8 + sizeof(uint8_t[NUM_VEH_BASE_COLOURS][MAX_VEH_POSSIBLE_COLOURS]), 0x298) char name[12];
	char manufacturer[12];
	PAD(0x298 + 24, 0x340) VehicleType vehicle_type;
	PAD(0x340 + 4, 0x500) CVehicleLayoutInfo* m_pVehicleLayoutInfo;
	PAD(0x500 + 8, 0x57C) soup::BigBitset<25> flags;
	PAD(0x57C + 25, 0x5A0);
};
static_assert(sizeof(CVehicleModelInfo) == 0x5A0);
#pragma pack(pop)
