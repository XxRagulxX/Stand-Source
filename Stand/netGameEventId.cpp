#include "netGameEventId.hpp"

#include <fmt/format.h>

#include "Label.hpp"

namespace Stand
{
	Label get_net_event_name(netGameEventId_t id) noexcept
	{
		switch (id)
		{
		case OBJECT_ID_FREED_EVENT:
			return LIT("OBJECT_ID_FREED_EVENT");

		case OBJECT_ID_REQUEST_EVENT:
			return LIT("OBJECT_ID_REQUEST_EVENT");

		case ARRAY_DATA_VERIFY_EVENT:
			return LIT("ARRAY_DATA_VERIFY_EVENT");

		case SCRIPT_ARRAY_DATA_VERIFY_EVENT:
			return LIT("SCRIPT_ARRAY_DATA_VERIFY_EVENT");

		case REQUEST_CONTROL_EVENT:
			return LIT("REQUEST_CONTROL_EVENT");

		case GIVE_CONTROL_EVENT:
			return LIT("GIVE_CONTROL_EVENT");

		case WEAPON_DAMAGE_EVENT:
			return LIT("WEAPON_DAMAGE_EVENT");

		case REQUEST_PICKUP_EVENT:
			return LIT("REQUEST_PICKUP_EVENT");

		case REQUEST_MAP_PICKUP_EVENT:
			return LIT("REQUEST_MAP_PICKUP_EVENT");

		case RESPAWN_PLAYER_PED_EVENT:
			return LIT("RESPAWN_PLAYER_PED_EVENT");

		case GIVE_WEAPON_EVENT:
			return LOC("GIVE_WEAPON_EVENT");

		case REMOVE_WEAPON_EVENT:
			return LOC("REMOVE_WEAPON_EVENT");

		case REMOVE_ALL_WEAPONS_EVENT:
			return LOC("REMOVE_ALL_WEAPONS_EVENT");

		case VEHICLE_COMPONENT_CONTROL_EVENT:
			return LIT("VEHICLE_COMPONENT_CONTROL_EVENT");

		case FIRE_EVENT:
			return LOC("FIRE_EVENT");

		case EXPLOSION_EVENT:
			return LOC("EXPLOSION_EVENT");

		case START_PROJECTILE_EVENT:
			return LIT("START_PROJECTILE_EVENT");

		case UPDATE_PROJECTILE_TARGET_EVENT:
			return LIT("UPDATE_PROJECTILE_TARGET_EVENT");

		case BREAK_PROJECTILE_TARGET_LOCK_EVENT:
			return LIT("BREAK_PROJECTILE_TARGET_LOCK_EVENT");

		case REMOVE_PROJECTILE_ENTITY_EVENT:
			return LIT("REMOVE_PROJECTILE_ENTITY_EVENT");

		case ALTER_WANTED_LEVEL_EVENT:
			return LIT("ALTER_WANTED_LEVEL_EVENT");

		case CHANGE_RADIO_STATION_EVENT:
			return LIT("CHANGE_RADIO_STATION_EVENT");

		case RAGDOLL_REQUEST_EVENT:
			return LIT("RAGDOLL_REQUEST_EVENT");

		case PLAYER_TAUNT_EVENT:
			return LIT("PLAYER_TAUNT_EVENT");

		case PLAYER_CARD_STAT_EVENT:
			return LIT("PLAYER_CARD_STAT_EVENT");

		case DOOR_BREAK_EVENT:
			return LIT("DOOR_BREAK_EVENT");

		case SCRIPTED_GAME_EVENT:
			return LOC("SE");

		case REMOTE_SCRIPT_INFO_EVENT:
			return LIT("REMOTE_SCRIPT_INFO_EVENT");

		case REMOTE_SCRIPT_LEAVE_EVENT:
			return LIT("REMOTE_SCRIPT_LEAVE_EVENT");

		case MARK_AS_NO_LONGER_NEEDED_EVENT:
			return LIT("MARK_AS_NO_LONGER_NEEDED_EVENT");

		case CONVERT_TO_SCRIPT_ENTITY_EVENT:
			return LIT("CONVERT_TO_SCRIPT_ENTITY_EVENT");

		case SCRIPT_WORLD_STATE_EVENT:
			return LIT("SCRIPT_WORLD_STATE_EVENT");

		case INCIDENT_ENTITY_EVENT:
			return LIT("INCIDENT_ENTITY_EVENT");

		case CLEAR_AREA_EVENT:
			return LIT("CLEAR_AREA_EVENT");

		case CLEAR_RECTANGLE_AREA_EVENT:
			return LIT("CLEAR_RECTANGLE_AREA_EVENT");

		case NETWORK_REQUEST_SYNCED_SCENE_EVENT:
			return LIT("NETWORK_REQUEST_SYNCED_SCENE_EVENT");

		case NETWORK_START_SYNCED_SCENE_EVENT:
			return LIT("NETWORK_START_SYNCED_SCENE_EVENT");

		case NETWORK_UPDATE_SYNCED_SCENE_EVENT:
			return LIT("NETWORK_UPDATE_SYNCED_SCENE_EVENT");

		case NETWORK_STOP_SYNCED_SCENE_EVENT:
			return LIT("NETWORK_STOP_SYNCED_SCENE_EVENT");

		case GIVE_PED_SCRIPTED_TASK_EVENT:
			return LIT("GIVE_PED_SCRIPTED_TASK_EVENT");

		case GIVE_PED_SEQUENCE_TASK_EVENT:
			return LIT("GIVE_PED_SEQUENCE_TASK_EVENT");

		case NETWORK_CLEAR_PED_TASKS_EVENT:
			return LIT("NETWORK_CLEAR_PED_TASKS_EVENT");

		case NETWORK_START_PED_ARREST_EVENT:
			return LIT("NETWORK_START_PED_ARREST_EVENT");

		case NETWORK_START_PED_UNCUFF_EVENT:
			return LIT("NETWORK_START_PED_UNCUFF_EVENT");

		case NETWORK_SOUND_CAR_HORN_EVENT:
			return LIT("NETWORK_SOUND_CAR_HORN_EVENT");

		case NETWORK_ENTITY_AREA_STATUS_EVENT:
			return LIT("NETWORK_ENTITY_AREA_STATUS_EVENT");

		case NETWORK_GARAGE_OCCUPIED_STATUS_EVENT:
			return LIT("NETWORK_GARAGE_OCCUPIED_STATUS_EVENT");

		case PED_CONVERSATION_LINE_EVENT:
			return LIT("PED_CONVERSATION_LINE_EVENT");

		case SCRIPT_ENTITY_STATE_CHANGE_EVENT:
			return LIT("SCRIPT_ENTITY_STATE_CHANGE_EVENT");

		case NETWORK_PLAY_SOUND_EVENT:
			return LOC("NETWORK_PLAY_SOUND_EVENT");

		case NETWORK_STOP_SOUND_EVENT:
			return LIT("NETWORK_STOP_SOUND_EVENT");

		case NETWORK_PLAY_AIRDEFENSE_FIRE_EVENT:
			return LIT("NETWORK_PLAY_AIRDEFENSE_FIRE_EVENT");

		case NETWORK_BANK_REQUEST_EVENT:
			return LIT("NETWORK_BANK_REQUEST_EVENT");

		case NETWORK_AUDIO_BARK_EVENT:
			return LIT("NETWORK_AUDIO_BARK_EVENT");

		case REQUEST_DOOR_EVENT:
			return LIT("REQUEST_DOOR_EVENT");

		case NETWORK_TRAIN_REQUEST_EVENT:
			return LIT("NETWORK_TRAIN_REQUEST_EVENT");

		case NETWORK_TRAIN_REPORT_EVENT:
			return LIT("NETWORK_TRAIN_REPORT_EVENT");

		case NETWORK_INCREMENT_STAT_EVENT:
			return LIT("NETWORK_INCREMENT_STAT_EVENT");

		case MODIFY_VEHICLE_LOCK_WORD_STATE_DATA:
			return LIT("MODIFY_VEHICLE_LOCK_WORD_STATE_DATA");

		case MODIFY_PTFX_WORD_STATE_DATA_SCRIPTED_EVOLVE_EVENT:
			return LIT("MODIFY_PTFX_WORD_STATE_DATA_SCRIPTED_EVOLVE_EVENT");

		case REQUEST_PHONE_EXPLOSION_EVENT:
			return LIT("REQUEST_PHONE_EXPLOSION_EVENT");

		case REQUEST_DETACHMENT_EVENT:
			return LIT("REQUEST_DETACHMENT_EVENT");

		case KICK_VOTES_EVENT:
			return LIT("KICK_VOTES_EVENT");

		case GIVE_PICKUP_REWARDS_EVENT:
			return LIT("GIVE_PICKUP_REWARDS_EVENT");

		case BLOW_UP_VEHICLE_EVENT:
			return LIT("BLOW_UP_VEHICLE_EVENT");

		case NETWORK_SPECIAL_FIRE_EQUIPPED_WEAPON:
			return LIT("NETWORK_SPECIAL_FIRE_EQUIPPED_WEAPON");

		case NETWORK_RESPONDED_TO_THREAT_EVENT:
			return LIT("NETWORK_RESPONDED_TO_THREAT_EVENT");

		case NETWORK_SHOUT_TARGET_POSITION:
			return LIT("NETWORK_SHOUT_TARGET_POSITION");

		case VOICE_DRIVEN_MOUTH_MOVEMENT_FINISHED_EVENT:
			return LIT("VOICE_DRIVEN_MOUTH_MOVEMENT_FINISHED_EVENT");

		case PICKUP_DESTROYED_EVENT:
			return LIT("PICKUP_DESTROYED_EVENT");

		case UPDATE_PLAYER_SCARS_EVENT:
			return LIT("UPDATE_PLAYER_SCARS_EVENT");

		case NETWORK_CHECK_EXE_SIZE_EVENT:
			return LIT("NETWORK_CHECK_EXE_SIZE_EVENT");

		case NETWORK_PTFX_EVENT:
			return LOC("NETWORK_PTFX_EVENT");

		case NETWORK_PED_SEEN_DEAD_PED_EVENT:
			return LIT("NETWORK_PED_SEEN_DEAD_PED_EVENT");

		case REMOVE_STICKY_BOMB_EVENT:
			return LIT("REMOVE_STICKY_BOMB_EVENT");

		case NETWORK_CHECK_CODE_CRCS_EVENT:
			return LIT("NETWORK_CHECK_CODE_CRCS_EVENT");

		case INFORM_SILENCED_GUNSHOT_EVENT:
			return LIT("INFORM_SILENCED_GUNSHOT_EVENT");

		case PED_PLAY_PAIN_EVENT:
			return LIT("PED_PLAY_PAIN_EVENT");

		case CACHE_PLAYER_HEAD_BLEND_DATA_EVENT:
			return LIT("CACHE_PLAYER_HEAD_BLEND_DATA_EVENT");

		case REMOVE_PED_FROM_PEDGROUP_EVENT:
			return LIT("REMOVE_PED_FROM_PEDGROUP_EVENT");

		case REPORT_MYSELF_EVENT:
			return LIT("REPORT_MYSELF_EVENT");

		case REPORT_CASH_SPAWN_EVENT:
			return LIT("REPORT_CASH_SPAWN_EVENT");

		case ACTIVATE_VEHICLE_SPECIAL_ABILITY_EVENT:
			return LIT("ACTIVATE_VEHICLE_SPECIAL_ABILITY_EVENT");

		case BLOCK_WEAPON_SELECTION:
			return LIT("BLOCK_WEAPON_SELECTION");

		case NETWORK_CHECK_CATALOG_CRC:
			return LIT("NETWORK_CHECK_CATALOG_CRC");
		}
		return LIT(fmt::to_string(id));
	}
}
